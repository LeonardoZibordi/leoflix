{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leona\\\\Desktop\\\\leoflix\\\\src\\\\components\\\\FormField\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nconst FormFieldWrapper = styled.div`\n`;\nconst Label = styled.label``;\nconst Input = styled.input`\n  background: #53585D;\n  color: #F5F5F5;\n  display: block;\n  width: 100%;\n  height: 57px;\n  font-size: 18px;\n  \n  outline: 0;\n  border: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid #53585D;\n  \n  padding: 16px 16px;\n  margin-bottom: 45px;\n  \n  resize: none;\n  border-radius: 4px;\n  transition: border-color .3s;\n  \n  &:focus {\n    border-bottom-color: var(--primary);\n  }\n  &:focus:not([type='color']) + ${Label.Text} {\n    transform: scale(.6) translateY(-10px);\n  }\n  ${({\n  value\n}) => {\n  const hasValue = value.length > 0;\n  return hasValue && css`\n        &:not([type='color']) + ${Label.Text} {\n          transform: scale(.6) translateY(-10px);\n        }\n      `;\n}}\n`;\n\nfunction FormField({\n  label,\n  name,\n  type,\n  value,\n  onChange\n}) {\n  const fieldId = `id_${name}`;\n  const isTextArea = type === 'textarea';\n  const tag = isTextArea ? 'textarea' : 'input';\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: fieldId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, label, \":\", /*#__PURE__*/React.createElement(Input, {\n    as: tag,\n    id: fieldId,\n    type: type,\n    name: name,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  })));\n}\n\nFormField.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {}\n};\nFormField.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default FormField;","map":{"version":3,"sources":["C:/Users/leona/Desktop/leoflix/src/components/FormField/index.js"],"names":["React","PropTypes","styled","FormFieldWrapper","div","Label","label","Input","input","Text","value","hasValue","length","css","FormField","name","type","onChange","fieldId","isTextArea","tag","defaultProps","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAI;CAApC;AAGA,MAAMC,KAAK,GAAGH,MAAM,CAACI,KAAM,EAA3B;AAEA,MAAMC,KAAK,GAAGL,MAAM,CAACM,KAAM;;;;;;;;;;;;;;;;;;;;;;;kCAuBOH,KAAK,CAACI,IAAK;;;IAGzC,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACf,QAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,GAAe,CAAhC;AACA,SAAOD,QAAQ,IAAIE,GAAI;kCACOR,KAAK,CAACI,IAAK;;;OADzC;AAKD,CACA;CAlCH;;AAqCA,SAASK,SAAT,CAAmB;AACjBR,EAAAA,KADiB;AACVS,EAAAA,IADU;AACJC,EAAAA,IADI;AACEN,EAAAA,KADF;AACSO,EAAAA;AADT,CAAnB,EAEG;AACD,QAAMC,OAAO,GAAI,MAAKH,IAAK,EAA3B;AACA,QAAMI,UAAU,GAAGH,IAAI,KAAK,UAA5B;AACA,QAAMI,GAAG,GAAGD,UAAU,GAAG,UAAH,GAAgB,OAAtC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,OAAO,EAAED,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGZ,KAHH,oBAKE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAEc,GADN;AAEE,IAAA,EAAE,EAAEF,OAFN;AAGE,IAAA,IAAI,EAAEF,IAHR;AAIE,IAAA,IAAI,EAAED,IAJR;AAKE,IAAA,KAAK,EAAEL,KALT;AAME,IAAA,QAAQ,EAAEO,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAkBD;;AAEDH,SAAS,CAACO,YAAV,GAAyB;AACvBL,EAAAA,IAAI,EAAE,MADiB;AAEvBN,EAAAA,KAAK,EAAE,EAFgB;AAGvBO,EAAAA,QAAQ,EAAE,MAAM,CAAG;AAHI,CAAzB;AAMAH,SAAS,CAACQ,SAAV,GAAsB;AACpBhB,EAAAA,KAAK,EAAEL,SAAS,CAACsB,MAAV,CAAiBC,UADJ;AAEpBR,EAAAA,IAAI,EAAEf,SAAS,CAACsB,MAFI;AAGpBR,EAAAA,IAAI,EAAEd,SAAS,CAACsB,MAAV,CAAiBC,UAHH;AAIpBd,EAAAA,KAAK,EAAET,SAAS,CAACsB,MAJG;AAKpBN,EAAAA,QAAQ,EAAEhB,SAAS,CAACwB;AALA,CAAtB;AAQA,eAAeX,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst FormFieldWrapper = styled.div`\r\n`;\r\n\r\nconst Label = styled.label``;\r\n\r\nconst Input = styled.input`\r\n  background: #53585D;\r\n  color: #F5F5F5;\r\n  display: block;\r\n  width: 100%;\r\n  height: 57px;\r\n  font-size: 18px;\r\n  \r\n  outline: 0;\r\n  border: 0;\r\n  border-top: 4px solid transparent;\r\n  border-bottom: 4px solid #53585D;\r\n  \r\n  padding: 16px 16px;\r\n  margin-bottom: 45px;\r\n  \r\n  resize: none;\r\n  border-radius: 4px;\r\n  transition: border-color .3s;\r\n  \r\n  &:focus {\r\n    border-bottom-color: var(--primary);\r\n  }\r\n  &:focus:not([type='color']) + ${Label.Text} {\r\n    transform: scale(.6) translateY(-10px);\r\n  }\r\n  ${({ value }) => {\r\n    const hasValue = value.length > 0;\r\n    return hasValue && css`\r\n        &:not([type='color']) + ${Label.Text} {\r\n          transform: scale(.6) translateY(-10px);\r\n        }\r\n      `;\r\n  }\r\n  }\r\n`;\r\n\r\nfunction FormField({\r\n  label, name, type, value, onChange,\r\n}) {\r\n  const fieldId = `id_${name}`;\r\n  const isTextArea = type === 'textarea';\r\n  const tag = isTextArea ? 'textarea' : 'input';\r\n\r\n  return (\r\n    <div>\r\n      <label\r\n        htmlFor={fieldId}\r\n      >\r\n        {label}\r\n        :\r\n        <Input\r\n          as={tag}\r\n          id={fieldId}\r\n          type={type}\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFormField.defaultProps = {\r\n  type: 'text',\r\n  value: '',\r\n  onChange: () => { },\r\n};\r\n\r\nFormField.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default FormField;\r\n"]},"metadata":{},"sourceType":"module"}
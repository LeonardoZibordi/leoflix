{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leona\\\\Desktop\\\\leoflix\\\\src\\\\components\\\\FormField\\\\index.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nconst FormFieldWrapper = styled.div`\n`;\nconst Label = styled.label``;\nconst Input = styled.input`\nbackground: #53585D;\n  color: #F5F5F5;\n  display: block;\n  width: 100%;\n  height: 57px;\n  font-size: 18px;\n\n  outline: 0;\n  border: 0;\n  border-top: 4px solid transparent;\n  border-bottom: 4px solid #53585D;\n\n  padding: 16px 16px;\n  margin-bottom: 45px;\n\n  resize: none;\n  border-radius: 4px;\n  transition: border-color .3s;\n\n  &:focus {\n    border-bottom-color: var(--primary);\n  }\n`;\n\nfunction FormField({\n  label,\n  name,\n  type,\n  value,\n  onChange\n}) {\n  const fieldId = `id_${name}`;\n  const isTextArea = type === 'textarea';\n  const tag = isTextArea ? 'textarea' : 'input';\n  return /*#__PURE__*/React.createElement(FormFieldWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    htmlFor: fieldId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, label, \":\", /*#__PURE__*/React.createElement(Input, {\n    as: tag,\n    id: fieldId,\n    type: type,\n    name: name,\n    value: value,\n    onChange: onChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  })));\n}\n\nFormField.defaultProps = {\n  type: 'text',\n  value: '',\n  onChange: () => {}\n};\nFormField.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func\n};\nexport default FormField;","map":{"version":3,"sources":["C:/Users/leona/Desktop/leoflix/src/components/FormField/index.js"],"names":["React","PropTypes","styled","FormFieldWrapper","div","Label","label","Input","input","FormField","name","type","value","onChange","fieldId","isTextArea","tag","defaultProps","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,gBAAgB,GAAGD,MAAM,CAACE,GAAI;CAApC;AAGA,MAAMC,KAAK,GAAGH,MAAM,CAACI,KAAM,EAA3B;AAEA,MAAMC,KAAK,GAAGL,MAAM,CAACM,KAAM;;;;;;;;;;;;;;;;;;;;;;;CAA3B;;AAyBA,SAASC,SAAT,CAAmB;AACjBH,EAAAA,KADiB;AACVI,EAAAA,IADU;AACJC,EAAAA,IADI;AACEC,EAAAA,KADF;AACSC,EAAAA;AADT,CAAnB,EAEG;AACD,QAAMC,OAAO,GAAI,MAAKJ,IAAK,EAA3B;AACA,QAAMK,UAAU,GAAGJ,IAAI,KAAK,UAA5B;AACA,QAAMK,GAAG,GAAGD,UAAU,GAAG,UAAH,GAAgB,OAAtC;AAEA,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAED,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGGR,KAHH,oBAKE,oBAAC,KAAD;AACE,IAAA,EAAE,EAAEU,GADN;AAEE,IAAA,EAAE,EAAEF,OAFN;AAGE,IAAA,IAAI,EAAEH,IAHR;AAIE,IAAA,IAAI,EAAED,IAJR;AAKE,IAAA,KAAK,EAAEE,KALT;AAME,IAAA,QAAQ,EAAEC,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF,CADF;AAkBD;;AAEDJ,SAAS,CAACQ,YAAV,GAAyB;AACvBN,EAAAA,IAAI,EAAE,MADiB;AAEvBC,EAAAA,KAAK,EAAE,EAFgB;AAGvBC,EAAAA,QAAQ,EAAE,MAAM,CAAG;AAHI,CAAzB;AAMAJ,SAAS,CAACS,SAAV,GAAsB;AACpBZ,EAAAA,KAAK,EAAEL,SAAS,CAACkB,MAAV,CAAiBC,UADJ;AAEpBT,EAAAA,IAAI,EAAEV,SAAS,CAACkB,MAFI;AAGpBT,EAAAA,IAAI,EAAET,SAAS,CAACkB,MAAV,CAAiBC,UAHH;AAIpBR,EAAAA,KAAK,EAAEX,SAAS,CAACkB,MAJG;AAKpBN,EAAAA,QAAQ,EAAEZ,SAAS,CAACoB;AALA,CAAtB;AAQA,eAAeZ,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst FormFieldWrapper = styled.div`\r\n`;\r\n\r\nconst Label = styled.label``;\r\n\r\nconst Input = styled.input`\r\nbackground: #53585D;\r\n  color: #F5F5F5;\r\n  display: block;\r\n  width: 100%;\r\n  height: 57px;\r\n  font-size: 18px;\r\n\r\n  outline: 0;\r\n  border: 0;\r\n  border-top: 4px solid transparent;\r\n  border-bottom: 4px solid #53585D;\r\n\r\n  padding: 16px 16px;\r\n  margin-bottom: 45px;\r\n\r\n  resize: none;\r\n  border-radius: 4px;\r\n  transition: border-color .3s;\r\n\r\n  &:focus {\r\n    border-bottom-color: var(--primary);\r\n  }\r\n`;\r\n\r\nfunction FormField({\r\n  label, name, type, value, onChange,\r\n}) {\r\n  const fieldId = `id_${name}`;\r\n  const isTextArea = type === 'textarea';\r\n  const tag = isTextArea ? 'textarea' : 'input';\r\n\r\n  return (\r\n    <FormFieldWrapper>\r\n      <Label\r\n        htmlFor={fieldId}\r\n      >\r\n        {label}\r\n        :\r\n        <Input\r\n          as={tag}\r\n          id={fieldId}\r\n          type={type}\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n        />\r\n      </Label>\r\n    </FormFieldWrapper>\r\n  );\r\n}\r\n\r\nFormField.defaultProps = {\r\n  type: 'text',\r\n  value: '',\r\n  onChange: () => { },\r\n};\r\n\r\nFormField.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n};\r\n\r\nexport default FormField;\r\n"]},"metadata":{},"sourceType":"module"}